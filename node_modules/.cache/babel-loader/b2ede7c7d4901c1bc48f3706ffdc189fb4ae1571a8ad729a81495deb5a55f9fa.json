{"ast":null,"code":"var _jsxFileName = \"/Users/kiyaradvahedi/Desktop/React/Document/07-usepopcorn/final/src/WatchedSection/MovieDetails.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport StarRating from \"../CustomHook_CustomPakage/StarRating\";\nimport { useKey } from \"../CustomHook_CustomPakage/useKey\";\nimport { KEY, Loader } from \"../App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function MovieDetails(_ref) {\n  _s();\n  var _watched$find;\n  let {\n    selectedId,\n    onCloseMovie,\n    onAddWatched,\n    watched\n  } = _ref;\n  const [movie, setMovie] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [userRating, setUserRating] = useState(\"\");\n  const countRef = useRef(0);\n  useEffect(function () {\n    if (userRating) countRef.current++;\n  }, [userRating]);\n  const isWatched = watched.map(movie => movie.imdbID).includes(selectedId);\n  const watchedUserRating = (_watched$find = watched.find(movie => movie.imdbID === selectedId)) === null || _watched$find === void 0 ? void 0 : _watched$find.userRating;\n  const {\n    Title: title,\n    Year: year,\n    Poster: poster,\n    Runtime: runtime,\n    imdbRating,\n    Plot: plot,\n    Released: released,\n    Actors: actors,\n    Director: director,\n    Genre: genre\n  } = movie;\n  function handleAdd() {\n    const newWatchedMovie = {\n      imdbID: selectedId,\n      title,\n      year,\n      poster,\n      imdbRating: Number(imdbRating),\n      runtime: Number(runtime.split(\" \").at(0)),\n      userRating,\n      countRatingDecisions: countRef.current\n    };\n    onAddWatched(newWatchedMovie);\n    onCloseMovie();\n  }\n  useKey(\"Escape\", onCloseMovie);\n  useEffect(function () {\n    async function getMovieDetails() {\n      setIsLoading(true);\n      const res = await fetch(`http://www.omdbapi.com/?apikey=${KEY}&i=${selectedId}`);\n      const data = await res.json();\n      setMovie(data);\n      setIsLoading(false);\n    }\n    getMovieDetails();\n  }, [selectedId]);\n  useEffect(function () {\n    if (!title) return;\n    document.title = `Movie | ${title}`;\n    return function () {\n      document.title = \"usePopcorn\";\n    };\n  }, [title]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"details\",\n    children: isLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-back\",\n          onClick: onCloseMovie,\n          children: \"\\u2190\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: poster,\n          alt: `Poster of ${movie} movie`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"details-overview\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [released, \" \\u2022 \", runtime]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: genre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u2B50\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this), imdbRating, \" IMDb rating\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rating\",\n          children: !isWatched ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(StarRating, {\n              maxRating: 10,\n              size: 24,\n              onSetRating: setUserRating\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 19\n            }, this), userRating > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-add\",\n              onClick: handleAdd,\n              children: \"+ Add to list\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"You rated with movie \", watchedUserRating, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u2B50\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 60\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"em\", {\n            children: plot\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Starring \", actors]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Directed by \", director]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(MovieDetails, \"ROBh/GPTnAnYSRB2tZwmbQ1wbRE=\", false, function () {\n  return [useKey];\n});\n_c = MovieDetails;\nvar _c;\n$RefreshReg$(_c, \"MovieDetails\");","map":{"version":3,"names":["useEffect","useRef","useState","StarRating","useKey","KEY","Loader","jsxDEV","_jsxDEV","Fragment","_Fragment","MovieDetails","_ref","_s","_watched$find","selectedId","onCloseMovie","onAddWatched","watched","movie","setMovie","isLoading","setIsLoading","userRating","setUserRating","countRef","current","isWatched","map","imdbID","includes","watchedUserRating","find","Title","title","Year","year","Poster","poster","Runtime","runtime","imdbRating","Plot","plot","Released","released","Actors","actors","Director","director","Genre","genre","handleAdd","newWatchedMovie","Number","split","at","countRatingDecisions","getMovieDetails","res","fetch","data","json","document","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","maxRating","size","onSetRating","_c","$RefreshReg$"],"sources":["/Users/kiyaradvahedi/Desktop/React/Document/07-usepopcorn/final/src/WatchedSection/MovieDetails.js"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport StarRating from \"../CustomHook_CustomPakage/StarRating\";\nimport { useKey } from \"../CustomHook_CustomPakage/useKey\";\nimport { KEY, Loader } from \"../App\";\n\nexport function MovieDetails({\n  selectedId,\n  onCloseMovie,\n  onAddWatched,\n  watched,\n}) {\n  const [movie, setMovie] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [userRating, setUserRating] = useState(\"\");\n\n  const countRef = useRef(0);\n\n  useEffect(\n    function () {\n      if (userRating) countRef.current++;\n    },\n    [userRating]\n  );\n\n  const isWatched = watched.map((movie) => movie.imdbID).includes(selectedId);\n  const watchedUserRating = watched.find(\n    (movie) => movie.imdbID === selectedId\n  )?.userRating;\n\n  const {\n    Title: title,\n    Year: year,\n    Poster: poster,\n    Runtime: runtime,\n    imdbRating,\n    Plot: plot,\n    Released: released,\n    Actors: actors,\n    Director: director,\n    Genre: genre,\n  } = movie;\n\n  function handleAdd() {\n    const newWatchedMovie = {\n      imdbID: selectedId,\n      title,\n      year,\n      poster,\n      imdbRating: Number(imdbRating),\n      runtime: Number(runtime.split(\" \").at(0)),\n      userRating,\n      countRatingDecisions: countRef.current,\n    };\n\n    onAddWatched(newWatchedMovie);\n    onCloseMovie();\n  }\n\n  useKey(\"Escape\", onCloseMovie);\n\n  useEffect(\n    function () {\n      async function getMovieDetails() {\n        setIsLoading(true);\n        const res = await fetch(\n          `http://www.omdbapi.com/?apikey=${KEY}&i=${selectedId}`\n        );\n        const data = await res.json();\n        setMovie(data);\n        setIsLoading(false);\n      }\n      getMovieDetails();\n    },\n    [selectedId]\n  );\n\n  useEffect(\n    function () {\n      if (!title) return;\n      document.title = `Movie | ${title}`;\n\n      return function () {\n        document.title = \"usePopcorn\";\n      };\n    },\n    [title]\n  );\n\n  return (\n    <div className=\"details\">\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <>\n          <header>\n            <button className=\"btn-back\" onClick={onCloseMovie}>\n              &larr;\n            </button>\n            <img src={poster} alt={`Poster of ${movie} movie`} />\n            <div className=\"details-overview\">\n              <h2>{title}</h2>\n              <p>\n                {released} &bull; {runtime}\n              </p>\n              <p>{genre}</p>\n              <p>\n                <span>⭐️</span>\n                {imdbRating} IMDb rating\n              </p>\n            </div>\n          </header>\n\n          <section>\n            <div className=\"rating\">\n              {!isWatched ? (\n                <>\n                  <StarRating\n                    maxRating={10}\n                    size={24}\n                    onSetRating={setUserRating}\n                  />\n                  {userRating > 0 && (\n                    <button className=\"btn-add\" onClick={handleAdd}>\n                      + Add to list\n                    </button>\n                  )}\n                </>\n              ) : (\n                <p>\n                  You rated with movie {watchedUserRating} <span>⭐️</span>\n                </p>\n              )}\n            </div>\n            <p>\n              <em>{plot}</em>\n            </p>\n            <p>Starring {actors}</p>\n            <p>Directed by {director}</p>\n          </section>\n        </>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}